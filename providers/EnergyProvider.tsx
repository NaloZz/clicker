"use client";

import { useAtom } from "jotai";
import { User } from "@prisma/client";
import { useCallback, useEffect } from "react";

import { energyAtom, lastExitAtom } from "@/lib/atoms";

import { Level } from "@/types";
import { battery_levels, charger_levels } from "@/constants";

interface LastExitProviderProps {
	user: User;
}

const LastExitProvider: React.FC<LastExitProviderProps> = ({ user }) => {
	const [energy, setEnergy] = useAtom(energyAtom);
	const [lastExit, setLastExit] = useAtom(lastExitAtom);

	const fillEnergy = useCallback(() => {
		const energyPerSecond = charger_levels[user.chargerLvl as Level].value;

		setEnergy((prev) => {
			const energyPool = battery_levels[user.batteryLvl as Level].value;

			if (prev < energyPool) {
				return Math.min(prev + energyPerSecond);
			} else {
				return prev;
			}
		});
	}, []);

	useEffect(() => {
    const energyPerSecond = charger_levels[user.chargerLvl as Level].value; // –°–∫–æ—Ä–æ—Å—Ç—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
    const energyPool = battery_levels[user.batteryLvl as Level].value; // –ú–∞–∫—Å. –∑–∞–ø–∞—Å —ç–Ω–µ—Ä–≥–∏–∏

    // 1Ô∏è‚É£ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏ –∑–∞ –æ—Ñ—Ñ–ª–∞–π–Ω-–≤—Ä–µ–º—è
    if (lastExit) {
        const secondsOffline = (Date.now() - Number(lastExit)) / 1000;
        const energyToRecover = Math.floor(secondsOffline * energyPerSecond);
        setEnergy((prev) => Math.min(prev + energyToRecover, energyPool));
    }

    // 2Ô∏è‚É£ –û–±—ã—á–Ω–æ–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏ –≤ –æ–Ω–ª–∞–π–Ω–µ (–Ω–µ –¥–∞—ë–º –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–∏–º —Ç–∞–π–º–µ—Ä–∞–º!)
    let interval: NodeJS.Timeout | null = null;
    if (!interval) {
        interval = setInterval(() => {
            setEnergy((prev) => Math.min(prev + energyPerSecond, energyPool));
        }, 1000);
    }

    return () => {
        if (interval) {
            clearInterval(interval);
            interval = null; // ‚úÖ –û—á–∏—â–∞–µ–º, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
        }
        setLastExit(Date.now()); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º—è –≤—ã—Ö–æ–¥–∞
    };
}, [user.chargerLvl, user.batteryLvl]); // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∞–ø–≥—Ä–µ–π–¥–æ–≤

	// üî• –î–æ–±–∞–≤–ª—è–µ–º return null, —á—Ç–æ–±—ã React –Ω–µ —Ä—É–≥–∞–ª—Å—è
	return null;
};

export default LastExitProvider;
